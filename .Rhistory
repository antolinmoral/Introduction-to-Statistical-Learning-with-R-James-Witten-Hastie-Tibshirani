fix(Carseats)
fix(Carseats)
library(MASS) # Built-in dataset library
library(ISLR) # Data library for Introduction to Statistial Learning in R, Hastie Tibshirani
fix(Carseats)
names(Carseats)
names(Boston) # The Boston dataframe
?Boston
plot(medv~lstat, Boston)
fit1 = lm(medv~lstat, data=Boston)
fit1
summary(fit1)
abline(fit1, col="red")
names(fit1)
hist(fit1$residuals) # See if residual are normally distributed
Boston
confint(fit1)
predict(fit1, data.frame(lstat=c(5,10,15)), interval="confidence") # See lower and upper confidence band
### Multiple Linear regression
fit2 = lm(medv ~ lstat + age, data=Boston)
fit2
summary(fit2)
fit3 = lm(medv ~ ., data=Boston)
fit3
summary(fit3)
par(mfrow=c(2,2))
plot(fit3)
fit4 = update(fit3, ~.-age-indus)
summary(fit4)
par(mfrow=c(2,2))
plot(fit4)
### Non-linear terms and Interactions
fit5 = lm(medv ~ lstat*age,Boston)
summary(fit5)
fit6= lm(medv ~ lstat + I(lstat^2), data=Boston)
summary(fit6)
attach(Boston)
par(mfrow=c(1,1))
plot(medv~lstat)
points(lstat, fitted(fit6), col="red", pch=20) # Plot the fitted fit6 along lstat
fit7 = lm(medv ~ poly(lstat,4))
points(lstat, fitted(fit7), col="blue", pch=20) # Plot the fitted fit7 along lstat; bit overfitted
plot(1:20,1:20, pch=1:20, cex=2) # Plot all 20 plotting characters
### Qualitative predictors
fix(Carseats)
names(Carseats)
names(Carseats)
library(ISLR) # Data library for Introduction to Statistial Learning in R, Hastie Tibshirani
fix(Carseats)
names(Carseats)
detach("package:ISLR", unload=TRUE)
library("ISLR", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
names(Carseats)
names(Carseats)
names(Auto)
names(Carseats)
names(Caravan)
names(College)
names(Default)
names(Hitters)
names(Khan)
names(Portfolio)
names(Wage)
names(Weakly)
names(Weekly)
names(Smarket)
names(OJ)
names(Carseats)
detach("package:ISLR", unload=TRUE)
remove.packages("ISLR")
install.packages("ISLR")
library(ISLR) # Data library for Introduction to Statistial Learning in R, Hastie Tibshirani
names(Carseats)
names(Caravan)
summary(Caravan)
names(Carseats)
summary(Caravan)
detach("package:ISLR", unload=TRUE)
summary(Caravan)
names(Carseats)
rm(Carseats)
library("ISLR", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
names(Carseats)
names(Carseats)
summary(Caravan)
summary(head(Caravan))
size(Caravan)
summary(head(Carseats))
summary(head(Carseats))
size(Carseats)
sim(Carseats)
dim(Carseats)
fix(Carseats)
fit1 = lm(Sales~.+Income:Adverstising+Age:Price, Carseats)
fit1 = lm(Sales~.+Income:Advertising+Age:Price, Carseats)
summary(fit1)
contrasts(Carseats$ShelveLoc)
regplot = function(x,y){
fit=lm(y~x)
plot(x,y)
abline(fit,col="red")
}
attach(Carseats)
regplot(Price, Sales)
regplot = function(x,y,...){
fit=lm(y~x)
plot(x,y,...)
abline(fit,col="red")
}
attach(Carseats)
regplot(Price, Sales)
regplot(Price, Sales, xlab="Price", ylab="Sales", col="blue", pch=20)
names(Boston) # The Boston dataframe
?Boston
plot(medv~lstat, Boston)
fit1 = lm(medv~lstat, data=Boston)
fit1
summary(fit1)
abline(fit1, col="red")
names(fit1)
hist(fit1$residuals) # See if residual are normally distributed
Boston
confint(fit1)
confint(fit1) // Confidence interval for intercept and slope
fit3 = lm(medv ~ ., data=Boston)
fit3
summary(fit3)
par(mfrow=c(2,2))
plot(fit3)
fit3 = lm(medv ~ ., data=Boston)
fit3
summary(fit3)
par(mfrow=c(2,2))
plot(fit3)
fit4 = update(fit3, ~.-age-indus)
summary(fit4)
par(mfrow=c(2,2))
plot(fit4)
fit4 = update(fit3, ~.-age-indus)
summary(fit4)
par(mfrow=c(2,2))
plot(fit4)
library(ISLR)
summary(Hitters)
?ISLR
with(Hitters, sum(is.na(Salary)))
Hitters=na.omit(Hitters)
with(Hitters, sum(is.na(Salary)))
library(leaps)
install.packages("leaps")
library(leaps)
regfit.full = regsubsets(Salary~., data=Hitters)
summary(regfit.full)
regfit.full = regsubsets(Salary~., data=Hitters, nvmax=19)
summary(regfit.full)
regfit.full = regsubsets(Salary~., data=Hitters, nvmax=19)
summary(regfit.full)
names(regfit.full)
reg.summary = summary(regfit.full)
names(reg.summary)
plot(reg.summary$cp, xlab="Number of variables", ylab="Cp")
plot(reg.summary$rms, xlab="Number of variables", ylab="Cp")
plot(reg.summary$rsq, xlab="Number of variables", ylab="Cp")
plot(reg.summary$rss, xlab="Number of variables", ylab="Cp")
plot(reg.summary$bic, xlab="Number of variables", ylab="Cp")
plot(reg.summary$cp, xlab="Number of variables", ylab="Cp")
which.min(reg.summary$co)
which.min(reg.summary$cp)
points(10, reg.summary$cp[10], pch=20, col="red")
plot(regfit.full,scale=Cp)
plot(regfit.full,scale="Cp")
version
